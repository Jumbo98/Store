//@ui5-bundle project1/Component-preload.js
sap.ui.require.preload({
	"project1/Component.js":function(){
sap.ui.define(["sap/fe/core/AppComponent"],function(e){"use strict";return e.extend("project1.Component",{metadata:{manifest:"json"}})});
},
	"project1/ext/controller/AddToActiveOrder.js":function(){
sap.ui.define(["sap/m/MessageToast","sap/m/Dialog","sap/m/Button","sap/m/HBox","sap/m/List","sap/m/CustomListItem","sap/m/Text","sap/m/Label","sap/m/Title","sap/m/VBox","sap/ui/model/Filter","sap/ui/model/Sorter","sap/m/ObjectStatus","sap/ui/core/library","sap/m/StepInput"],function(e,t,a,n,r,s,i,d,o,l,p,g,u,m,w){"use strict";var y=m.ValueState;return{openActiveOrderPopup:function(e){let o=e=>{switch(e){case"1":return y.Error;case"2":return y.Warning;case"3":return y.Success;case"5":return y.None;default:return y.None}},g=e=>Number(e),m=e=>{let t=sap.ui.getCore().byId("addingToOrderSI").getValue(),a=sap.ui.core.format.NumberFormat.getFloatInstance().parse(e);if(e){return a*t+" $"}return"0 $"},c=function(e){const t=sap.ui.getCore().byId("totalCostsByAdding");t.getBindingInfo("text").modelChangeHandler()},C=function(e){const t=e.getParameter("listItem"),a=t.getBindingContext().getObject("ID"),n=sap.ui.getCore().byId("addingToOrderSI").getValue(),r=this.getBindingContext().getObject("ID"),s={product:r,count:n,order:a},i={model:this.getModel(),parameterValues:s};this.getEditFlow().invokeAction("Catalog.addToOrderWithParams",i);this.dialogOfOrders.close()},h=()=>new t({title:"{i18n>ttlAdding}: {title}",content:[new n({renderType:"Bare",wrap:"Wrap",alignItems:"Center",items:[new d({text:"{i18n>lPricePerUnit}",showColon:true}).addStyleClass("sapUiTinyMarginEnd"),new i({text:"{price} $"})]}).addStyleClass("sapUiTinyMargin"),new n({renderType:"Bare",wrap:"Wrap",alignItems:"Center",items:[new d({text:"{i18n>lAmount}",showColon:true}).addStyleClass("sapUiTinyMarginEnd"),new w({id:"addingToOrderSI",width:"1rem",value:1,min:1,max:{path:"stock",targetType:"float",formatter:g},step:1,largerStep:2,change:c.bind(this)})]}).addStyleClass("sapUiTinyMargin"),new n({renderType:"Bare",wrap:"Wrap",alignItems:"Center",items:[new d({text:"{i18n>lTotalCostsByAdding}",showColon:true}).addStyleClass("sapUiTinyMarginEnd"),new i({id:"totalCostsByAdding",text:{path:"price",formatter:m}})]}).addStyleClass("sapUiTinyMargin"),new r({select:C.bind(this),mode:"SingleSelectMaster",items:{path:"/Catalog.OrdersView",filters:[new p({path:"status_ID",value1:"6FF30140-FADA-914F-1900-51EE8E50FF04",operator:"EQ"}),new p({path:"status_ID",value1:"66F30140-FADA-914F-1900-51EE8E50FF04",operator:"EQ"})],template:new s({content:new l({items:[new n({renderType:"Bare",wrap:"Wrap",items:[new d({text:"{i18n>lCreatedAt}",showColon:true}).addStyleClass("sapUiTinyMarginEnd"),new i({text:"{createdAt}"})]}).addStyleClass("sapUiTinyMarginBottom"),new n({renderType:"Bare",wrap:"Wrap",items:[new d({text:"{i18n>lStatus}",showColon:true}).addStyleClass("sapUiTinyMarginEnd"),new u({text:"{status/title}",state:{path:"status/statusCriticality",formatter:o}})]}).addStyleClass("sapUiTinyMarginBottom"),new n({renderType:"Bare",wrap:"Wrap",items:[new d({text:"Total by Order",showColon:true}).addStyleClass("sapUiTinyMarginEnd"),new i({text:"{totalByOrder} $"})]})]}).addStyleClass("sapUiTinyMargin")})}})],endButton:new a({text:"{i18n>btnCancel}",tooltip:"{i18n>ttCancel}",type:"Transparent",press:()=>this.dialogOfOrders.close()})});if(!this.dialogOfOrders){this.dialogOfOrders=h();this.getEditFlow().getView().addDependent(this.dialogOfOrders)}this.dialogOfOrders.open()}}});
},
	"project1/ext/controller/OrdersView.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/ControllerExtension"],function(e){"use strict";return e.extend("project1.ext.controller.OrdersView",{override:{onInit:function(){var e=this.base.getExtensionAPI().getModel();this.base.getExtensionAPI().getEditFlow().attachonBeforeDelete(async function(e){var t=sap.ui.getCore().byId("project1::OrdersViewObjectPage--fe::table::OrderItems::LineItem::Itemsoforder::Table"),r=queueMicrotask(async()=>await t.getCounts())})}}})});
},
	"project1/ext/controller/ProductGridList.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/ControllerExtension"],function(t){"use strict";return t.extend("project1.ext.controller.ProductGridList",{override:{onInit:function(){this.getView().attachEventOnce("afterRendering",function(){this.base.getExtensionAPI().getEditFlow().getView().getController()._getFilterBarControl().attachSearch(function(t){const{filters:e,search:i}=this.base.getExtensionAPI().getFilters();const n=sap.ui.getCore().byId("project1::ProductsViewList--fe::CustomTab::ProductsCard--productGrid");n.getBinding("items").filter(e)}.bind(this))},this)}}})});
},
	"project1/ext/controller/RefreshBtn.js":function(){
sap.ui.define(["sap/m/MessageToast"],function(e){"use strict";return{refresh:function(e){sap.ui.getCore().byId("project1::ProductsViewList--fe::table::table2::LineItem::Table").refresh()},refreshOrders:function(){sap.ui.getCore().byId("project1::ProductsViewList--fe::table::tableView::LineItem::Table").refresh()},refreshOrderItems:function(){sap.ui.getCore().byId("project1::OrdersViewObjectPage--fe::table::OrderItems::LineItem::Itemsoforder::Table").refresh()}}});
},
	"project1/ext/fragment/Comments.fragment.xml":'<core:FragmentDefinition\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"\n    xmlns:macros="sap.fe.macros"\n    xmlns:richtexteditor="sap.ui.richtexteditor"\n><VBox ><List\n            \n            id="ProductList"\n            items="{\n\t\t\t\tpath: \'Comments\',\n\t\t\t\tsorter : {                 \n\t\t\t\t\tpath : \'createdAt\',\n\t\t\t\t\tdescending: true\n                }\n\n\t\t\t}"\n            includeItemInSelection="false"\n        ><CustomListItem><content><VBox renderType="Bare" class="sapUiSmallMargin"><RatingIndicator\n                            maxValue="5"\n                            enabled="false"\n                            value="{rating}"\n                            iconSize="1.5rem"\n                            tooltip="Rating"\n                        /><core:HTML content="{content}" /><HBox renderType="Bare" justifyContent="SpaceBetween"><Text text="{createdBy}" /><Text text="{createdAt}" /></HBox></VBox></content></CustomListItem></List><richtexteditor:RichTextEditor\n            id="rteComment"\n            width="100%"\n            height="300px"\n            value=""\n            editable="true"\n            showGroupFontStyle="true"\n            showGroupInsert="true"\n            customToolbar="true"\n        ><richtexteditor:customButtons><Button \n                    core:require="{ handler: \'project1/ext/fragment/Comments\'}"\n                    iconFirst="true"\n                    iconDensityAware="true"\n                    text="Upload picture"\n                    icon="sap-icon://attachment-photo"\n                    tooltip="Attach the picture from local storage"\n                    press="handler.onAddImage"\n                /></richtexteditor:customButtons></richtexteditor:RichTextEditor><HBox width="100%" renderType="Bare" wrap="WrapReverse" alignItems="Center" justifyContent="SpaceBetween"><Button core:require="{ handler: \'project1/ext/fragment/Comments\'}"\n                text="Save comment"\n                press="handler.onSaveComment"\n            /><RatingIndicator\n                id="riPComment"\n                maxValue="5"\n                enabled="true"\n                value=""\n                iconSize="2rem"\n                tooltip="Rating"\n            /></HBox></VBox></core:FragmentDefinition>\n',
	"project1/ext/fragment/Comments.js":function(){
sap.ui.define(["sap/m/MessageToast"],function(e){"use strict";return{onAddImage:async function(){if(!this.oDialog){this.oDialog=await this.loadFragment({name:"project1.ext.fragment.ImageUploaderDialog"});this.getEditFlow().getView().addDependent(this.oDialog)}this.oDialog.open()},onUploadImage:function(){const t=this.oDialog;const o=t.getContent()[0];const n=o.getInputReference().files;if(!n||n.length===0){e.show("Выберите файл");return}const a=n[0];const s=this;const i=new FileReader;i.onload=function(o){const n=btoa(new Uint8Array(o.target.result).reduce((e,t)=>e+String.fromCharCode(t),""));const i=s.getEditFlow().getView().getModel();s.getEditFlow().invokeAction("/uploadImage",{model:i,parameterValues:[{name:"fileName",value:a.name},{name:"mimeType",value:a.type},{name:"data",value:n}],skipParameterDialog:true}).then(function(o){const n=o.getObject("value");const a=s.byId("rteComment");let i=a.getValue();i+=`<img src="${n}" style="max-width:100%"/>`;a.setValue(i);e.show("Картинка добавлена");t.close()}).catch(function(t){e.show("Ошибка загрузки: "+(t&&t.message?t.message:t))})};i.readAsArrayBuffer(a)},onUploadCancel:function(){this.byId("uploadDialog").close()},onUploadDialogClose:function(){const e=this.byId("fileUploader");if(e){e.clear()}},onSaveComment:function(){const t=this;const o=this.byId("rteComment");const n=this.byId("riPComment");const a=n.getValue();const s=o.getValue();const i=this.getBindingContext().getProperty("ID");const l=this.getEditFlow().getView().getModel();const c=l.bindList("/CommentsView");const g=c.create({product_ID:i,content:s,rating:a});g.created().then(function(){e.show("Комментарий сохранен");o.setValue(null);n.setValue(null);t.getBindingContext().refresh()}).catch(function(t){e.show("Ошибка: "+(t&&t.message?t.message:t))})}}});
},
	"project1/ext/fragment/ImageUploaderDialog.fragment.xml":'<core:FragmentDefinition\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:unified="sap.ui.unified"\n><Dialog\n        core:require="{ handler: \'project1/ext/fragment/Comments\'}"\n        id="uploadDialog"\n        title="Загрузить картинку"\n        afterClose="handler.onUploadDialogClose"\n    ><content><unified:FileUploader\n                id="fileUploader"\n                width="95%"\n                class="sapUiTinyMargin"\n                name="myFileUpload"\n                fileType="jpeg,jpg,png"\n            /></content><beginButton><Button\n                core:require="{ handler: \'project1/ext/fragment/Comments\'}"\n                text="Upload"\n                press="handler.onUploadImage"\n            /></beginButton><endButton><Button\n                core:require="{ handler: \'project1/ext/fragment/Comments\'}"\n                text="Cancel"\n                press="handler.onUploadCancel"\n            /></endButton></Dialog></core:FragmentDefinition>\n',
	"project1/ext/fragment/OnlyFreshProducts.fragment.xml":'<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><CheckBox\n            id="onlyFreshProducts"\n            core:require="{handler: \'project1/ext/fragment/OnlyFreshProducts\'}"\n            selected="{path: \'filterValues>\', type: \'sap.fe.macros.filter.type.Value\', formatOptions: { operator: \'project1.ext.fragment.OnlyFreshProducts.filterItems\' }}"\n        \n        /></core:FragmentDefinition>',
	"project1/ext/fragment/OnlyFreshProducts.js":function(){
sap.ui.define(["sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,r){"use strict";return{filterItems:function(t){debugger;switch(t){case"0":return new e({path:"onlyFreshProducts",operator:r.LT,value1:100});case"1":return new e({filters:[new e({path:"onlyFreshProducts",operator:r.GT,value1:100}),new e({path:"onlyFreshProducts",operator:r.LT,value1:500})],and:true});case"2":return new e({path:"onlyFreshProducts",operator:r.GT,value1:500})}}}});
},
	"project1/ext/fragment/ProductsGridTable.controller.js":function(){
sap.ui.define(["sap/m/MessageToast","sap/ui/model/Filter"],function(e,t){"use strict";return{onProductPress:function(e){this.getRouting().navigateToRoute("ProductsViewObjectPage",{key:e.getSource().getBindingContext().getObject("ID")})}}});
},
	"project1/ext/fragment/ProductsGridTable.fragment.xml":'<core:FragmentDefinition\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"\n    xmlns:f="sap.f"\n    xmlns:grid="sap.ui.layout.cssgrid"\n><f:GridList\n        id="productGrid"\n        items="{\n\t\t\t\tpath: \'/ProductsView\',\n\t\t\t\tsorter: { \n\t\t\t\t\t\tpath: \'type/title\',\n\t\t\t\t\t\tgroup: true \n\t\t\t\t\t\t}\n\t\t\t}"\n        core:require="{ handler: \'project1/ext/fragment/ProductsGridTable.controller\'}"\n    ><f:GridListItem\n    type="Active"\n    press="handler.onProductPress"\n    counter="{stock}"\n><f:layoutData><grid:ResponsiveColumnItemLayoutData columns="2" rows="1" /></f:layoutData><VBox\n        height="320px"\n        justifyContent="SpaceBetween"\n        class="sapUiSmallMargin"\n        renderType="Bare"\n    ><VBox alignItems="Center" renderType="Bare"><Avatar\n                displayShape="Square"\n                displaySize="Custom"\n                customDisplaySize="11rem"\n                src="/project1/webapp/ext/img/placeholder.webp"\n            /><Title\n                textAlign="Center"\n                text="{title}"\n                level="H4"\n                wrapping="true"\n                width="100%"\n                class="sapUiTinyMarginTop"\n            /><Text\n                textAlign="Center"\n                text="{description}"\n                wrapping="true"\n                maxLines="4"\n                width="100%"\n                class="sapUiTinyMarginTop"\n            /><HBox\n                visible="false"\n                class="sapUiTinyMarginTop"\n            ><ObjectAttribute\n                    text="{company/title}"\n                    class="sapUiSmallMarginEnd"\n                /><ObjectAttribute text="{type/title}" /></HBox></VBox><HBox\n            alignItems="Center"\n            renderType="Bare"\n            justifyContent="SpaceBetween"\n            width="100%"\n            class="sapUiTinyMarginTop"\n        ><ObjectNumber\n                number="{price}"\n                unit="USD"\n                class="sapUiTinyMarginEnd"\n            /><RatingIndicator\n                maxValue="5"\n                enabled="false"\n                value="{rating}"\n                iconSize="20px"\n                tooltip="Rating"\n            /></HBox></VBox></f:GridListItem></f:GridList></core:FragmentDefinition>\n',
	"project1/ext/fragment/Quantity.fragment.xml":'<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><HBox renderType="Bare" alignItems="Center"><Text  text="{quantity}" visible="{= !${ui>/isEditable} }"/><StepInput\n\t\t\tcore:require="{ handler: \'project1/ext/fragment/Quantity\'}"\n\t\t\tvisible="{ui>/isEditable}"\n\t\t\tvalue="{quantity}"\n\t\t\tmin="1"\n\t\t\tmax="{path: \'product/stock\', targetType: \'float\', formatter: \'handler.test\'}"\n\t\t\twidth="100%"\n\t\t\tstep="1"\n\t\t\tlargerStep="2"\n\t\t\tvalidationMode="LiveChange"\n\t\t/></HBox></core:FragmentDefinition> ',
	"project1/ext/fragment/Quantity.js":function(){
sap.ui.define(["sap/m/MessageToast"],function(e){"use strict";return{onPress:function(n){e.show("Custom handler invoked.")},test:function(e){return Number(e)}}});
},
	"project1/i18n/i18n.properties":'# This is the resource bundle for project1\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Store\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n\n#XCOL: Custom action text\nrefresh=refresh\n\nProduct=Product\n\n#XCOL: Custom action text\naddToActiveOrder=Add to active order\n\n#XTIT: Custom view title\nproducts=Products\n\n#XCOL: Custom filter field label\nfreshproduct=FreshProduct\n\n#XCOL: Custom filter field label\nonlyfreshproducts=onlyFreshProducts\n',
	"project1/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"project1","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:lrop","version":"1.16.3","toolsId":"b7474a24-ec38-40e5-9290-49d97a97d568"},"dataSources":{"mainService":{"uri":"odata/v4/catalog/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.132.1","libs":{"sap.m":{},"sap.ui.core":{},"sap.fe.templates":{},"sap.f":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"project1.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}},"@i18n":{"type":"sap.ui.model.resource.ResourceModel","uri":"i18n/i18n.properties"}},"resources":{"css":[]},"routing":{"config":{},"routes":[{"pattern":":?query:","name":"ProductsViewList","target":["ProductsViewList"]},{"pattern":"ProductsView({key}):?query:","name":"ProductsViewObjectPage","target":["ProductsViewList","ProductsViewObjectPage"]},{"name":"OrdersViewObjectPage","pattern":"OrdersView({OrdersViewKey}):?query:","target":["ProductsViewList","OrdersViewObjectPage"]}],"targets":{"ProductsViewList":{"type":"Component","id":"ProductsViewList","name":"sap.fe.templates.ListReport","options":{"settings":{"contextPath":"/ProductsView","variantManagement":"Page","navigation":{"ProductsView":{"detail":{"route":"ProductsViewObjectPage"}},"OrdersView":{"detail":{"route":"OrdersViewObjectPage"}}},"controlConfiguration":{"/OrdersView/@com.sap.vocabularies.UI.v1.LineItem#tableView":{"tableSettings":{"disableCopyToClipboard":false,"enableExport":false,"selectAll":false,"selectionMode":"None","type":"ResponsiveTable","quickVariantSelection":{"showCounts":true}},"actions":{"refreshOrders":{"press":"project1.ext.controller.RefreshBtn.refreshOrders","visible":true,"enabled":true,"requiresSelection":false,"text":"{i18n>refresh}"}}},"@com.sap.vocabularies.UI.v1.SelectionFields":{"filterFields":{"onlyFreshProducts":{"label":"{i18n>onlyfreshproducts}","property":"onlyFreshProducts","template":"project1.ext.fragment.OnlyFreshProducts","required":false}}}},"initialLoad":"Enabled","views":{"paths":[{"key":"ProductsCard","label":"{i18n>products}","template":"project1.ext.fragment.ProductsGridTable"},{"key":"tableView","annotationPath":"com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView","entitySet":"OrdersView"}],"showCounts":true}}}},"ProductsViewObjectPage":{"type":"Component","id":"ProductsViewObjectPage","name":"sap.fe.templates.ObjectPage","options":{"settings":{"editableHeaderContent":false,"contextPath":"/ProductsView","content":{"header":{"actions":{"AddToActiveOrder":{"press":"project1.ext.controller.AddToActiveOrder.openActiveOrderPopup","visible":true,"enabled":true,"text":"{i18n>addToActiveOrder}","position":{"placement":"Before","anchor":"DataFieldForAction::Catalog.addToOrderByCurrUser"}}}},"body":{"sections":{"Comments":{"template":"project1.ext.fragment.Comments","position":{"placement":"After","anchor":"GeneratedFacet1"},"title":"Comments"}}}}}}},"OrdersViewObjectPage":{"type":"Component","id":"OrdersViewObjectPage","name":"sap.fe.templates.ObjectPage","options":{"settings":{"navigation":{},"contextPath":"/OrdersView","controlConfiguration":{"OrderItems/@com.sap.vocabularies.UI.v1.LineItem#Itemsoforder":{"tableSettings":{"disableCopyToClipboard":true,"enableExport":false,"enableFullScreen":true,"enablePaste":false,"selectAll":false,"selectionMode":"Multi","type":"ResponsiveTable","creationMode":{"createAtEnd":true,"inlineCreationRowsHiddenInEditMode":true,"name":"InlineCreationRows"},"quickVariantSelection":{"showCounts":true}},"actions":{"refreshOrderItems":{"press":"project1.ext.controller.RefreshBtn.refreshOrderItems","visible":true,"enabled":true,"requiresSelection":false,"text":"{i18n>refresh}"}},"columns":{"Quantity":{"header":"Quantity","width":"20%","position":{"anchor":"DataField::product_ID","placement":"After"},"template":"project1.ext.fragment.Quantity"},"DataField::product_ID":{"widthIncludingColumnHeader":true,"width":"25%"},"DataField::product::price":{"width":"20%"},"DataField::totalByItem":{"width":"19%"}}}},"sectionLayout":"Page","variantManagement":"None","editableHeaderContent":false}}}}},"extends":{"extensions":{"sap.ui.controllerExtensions":{"sap.fe.templates.ObjectPage.ObjectPageController#project1::OrdersViewObjectPage":{"controllerName":"project1.ext.controller.OrdersView"},"sap.fe.templates.ListReport.ListReportController#project1::ProductsViewList":{"controllerName":"project1.ext.controller.ProductGridList"}}}}},"sap.fiori":{"registrationIds":[],"archeType":"transactional"}}'
});
//# sourceMappingURL=Component-preload.js.map
